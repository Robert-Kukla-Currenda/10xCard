@page "/user/info"
@using TenXCards.API.Models
@using TenXCards.Frontend.Services
@inject IAuthenticationService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Informacje o użytkowniku</PageTitle>

@if (_loading)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else if (_error != null)
{
    <MudAlert Severity="Severity.Error" Class="my-2">@_error</MudAlert>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="LoadUserDataAsync">Spróbuj ponownie</MudButton>
}
else if (_userData != null)
{
    <UserInfoCard UserData="@_userData" />
}

@code {
    private bool _loading = true;
    private string? _error;
    private UserDto? _userData;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserDataAsync();
    }

    private async Task LoadUserDataAsync()
    {
        try
        {
            _loading = true;
            _error = null;
            _userData = await AuthService.GetCurrentUserAsync();
            
            if (_userData == null)
            {                _error = "Nie udało się załadować danych użytkownika. Spróbuj ponownie później.";                
            }
        }
        catch (Exception ex)
        {
            _error = "Wystąpił błąd podczas ładowania danych użytkownika.";
        }
        finally
        {
            _loading = false;
        }
    }
}
